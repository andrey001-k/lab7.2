#include <iostream>
#include <vector>

using namespace std;

void printMatrix(const vector<vector<int>>& matrix) {
    for (const auto& row : matrix) {
        for (int elem : row) {
            cout << elem << "\t";
        }
        cout << endl;
    }
}

int findFirstOddColumn(const vector<vector<int>>& matrix) {
    int row = matrix.size();
    int col = matrix[0].size();

    for (int j = 0; j < col; j++) {
        bool allOdd = true;
        for (int i = 0; i < row; i++) {
            if (matrix[i][j] % 2 == 0) {
                allOdd = false;
                break;
            }
        }
        if (allOdd) return j + 1; // возвращаем номер столбца (с 1)
    }
    return 0;
}

void deleteColumn(vector<vector<int>>& matrix, int K) {
    if (K < 1 || K > matrix[0].size()) {
        cout << "Неправильный номер столбца!" << endl;
        return;
    }

    for (auto& row : matrix) {
        row.erase(row.begin() + (K - 1)); // удаляем K-й столбец
    }
}

int main() {
    int row, col, K;
    cout << "Введите количество строк (2-20): ";
    cin >> row;
    cout << "Введите количество столбцов (2-20): ";
    cin >> col;

    if (row < 2 || row > 20 || col < 2 || col > 20) {
        cout << "Ошибка: неверные размеры матрицы!" << endl;
        return 1;
    }

    vector<vector<int>> matrix(row, vector<int>(col));

    cout << "Введите элементы матрицы:" << endl;
    for (int i = 0; i < row; i++) {
        for (int j = 0; j < col; j++) {
            cin >> matrix[i][j];
        }
    }

    cout << "Начальная матрица:" << endl;
    printMatrix(matrix);

    int firstOddColumn = findFirstOddColumn(matrix);
    cout << "Номер первого столбца с нечетными числами: " << firstOddColumn << endl;

    cout << "Введите номер столбца для удаления (1-" << col << "): ";
    cin >> K;

    deleteColumn(matrix, K);

    cout << "Матрица после удаления столбца " << K << ":" << endl;
    printMatrix(matrix);

    return 0;
}
